{"version":3,"sources":["components/Loader.js","screens/HomeScreen.js","api/api.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","Spinner","animation","role","style","width","height","margin","display","className","HomeScreen","dateVal","moment","format","useState","mediaUrl","setMediaUrl","loading","setLoading","mediaType","setMediaType","title","setTitle","desc","setDesc","date","setDate","isValidForNext","setIsValidForNext","searchQuery","setSearchQuery","useEffect","a","axios","get","mediaObj","data","media_type","url","explanation","tempQuery","replace","dayAfter","add","isAfter","fetchData","nextHandler","type","subtract","window","scrollTo","href","target","rel","src","alt","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","Header","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c00df07.chunk.js","sourcesContent":["import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Loader from '../components/Loader'\nimport moment from 'moment'\nimport { API_KEY } from '../api/api'\n\nconst HomeScreen = () => {\n  const dateVal = moment().format('YYYY-MM-DD')\n  const [mediaUrl, setMediaUrl] = useState('https://via.placeholder.com/500')\n  const [loading, setLoading] = useState(true)\n  const [mediaType, setMediaType] = useState('image')\n  const [title, setTitle] = useState('')\n  const [desc, setDesc] = useState('')\n  const [date, setDate] = useState(dateVal)\n  const [isValidForNext, setIsValidForNext] = useState(true)\n  const [searchQuery, setSearchQuery] = useState(\n    'https://www.google.com/search?q=NASA'\n  )\n\n  //running\n  useEffect(() => {\n    const fetchData = async () => {\n      const mediaObj = await axios.get(\n        `https://api.nasa.gov/planetary/apod?api_key=${API_KEY}&date=${date}`\n      )\n      if (mediaObj.data.media_type === 'image') {\n        setMediaType('image')\n      } else if (mediaObj.data.media_type === 'video') {\n        setMediaType('video')\n      }\n      setMediaUrl(mediaObj.data.url)\n      setTitle(mediaObj.data.title)\n      setDesc(mediaObj.data.explanation)\n      const tempQuery =\n        'https://www.google.com/search?q=' +\n        mediaObj.data.title.replace(/ /g, '+')\n      setSearchQuery(tempQuery)\n      setLoading(false)\n\n      const dayAfter = moment(date).add(1, 'days').format('YYYY-MM-DD')\n      if (moment(dayAfter).isAfter(dateVal)) {\n        setIsValidForNext(false)\n      }\n    }\n\n    fetchData()\n  }, [date, isValidForNext, dateVal])\n\n  const nextHandler = (type) => {\n    if (type === 'prev') {\n      setDate(moment(date).subtract(1, 'days').format('YYYY-MM-DD'))\n      setIsValidForNext(true)\n      window.scrollTo(0, 0)\n    } else {\n      setDate(moment(date).add(1, 'days').format('YYYY-MM-DD'))\n      window.scrollTo(0, 0)\n    }\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      {!loading && (\n        <>\n          <div className='grid lg:grid-cols-2 md:px-10 lg:px-30 xl:px-30 2xl:px-55 font-body'>\n            <div className='p-2 md:p-10 sm:mx-auto max-w-sm md:max-w-lg md:w-10/12'>\n              <p className='text-md pb-2'>{date}</p>\n              <p className='text-3xl py-5'>{title}</p>\n              <p className='text-base'>{desc}</p>\n              <div className='grid grid-cols-2 md:flex md:justify-center mt-5 md:mt-10 lg:gap-2 xl:gap-10'>\n                <div>\n                  <a\n                    href={searchQuery}\n                    target='_blank'\n                    rel='noreferrer'\n                    className='rounded py-2 px-6 ml-4 text-primary border-blue-800 border-2 hover:bg-blue-800 hover:text-white transition ease-out duration-500'\n                  >\n                    <span className='text-xs md:text-base'>Learn More</span>\n                  </a>\n                </div>\n                <div>\n                  <a\n                    href={mediaUrl}\n                    target='_blank'\n                    rel='noreferrer'\n                    className='rounded py-2 px-6 mr-4 text-primary bg-blue-800 hover:bg-white border-2 hover:border-blue-800 text-white hover:text-blue-800 transition ease-out duration-500'\n                  >\n                    <span className='text-xs md:text-base'>\n                      View {mediaType === 'image' && <span>Image</span>}\n                      {mediaType === 'video' && <span>Video</span>}\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div>\n              {mediaType === 'image' && (\n                <div>\n                  <img\n                    className='object-contain md:object-scale-down w-11/12 md:max-w-lg overflow-hidden md:overflow-visible py-10 md:pt-20 mx-auto'\n                    src={mediaUrl}\n                    alt='APOD'\n                  />\n                </div>\n              )}\n              {mediaType === 'video' && (\n                <div>\n                  <iframe\n                    className='w-11/12 md:max-w-lg overflow-hidden md:overflow-visible py-10 md:pt-20 mx-auto'\n                    title='video_of_the_day'\n                    width='500'\n                    height='400'\n                    src={mediaUrl}\n                  ></iframe>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className='flex justify-between md:grid md:grid-cols-2 lg:px-30 xl:px-60 font-body mb-10'>\n            <div className='flex justify-start lg:pl-5'>\n              <button\n                onClick={() => {\n                  nextHandler('prev')\n                }}\n                className='rounded py-2 px-4 md:px-8 m-2 md:m-4 text-md text-primary bg-blue-800 hover:bg-white border-2 hover:border-blue-800 text-white hover:text-blue-800 transition ease-out duration-500'\n              >\n                <svg\n                  className='inline-block w-6 h-6 mr-3'\n                  fill='none'\n                  stroke='currentColor'\n                  viewBox='0 0 24 24'\n                  xmlns='http://www.w3.org/2000/svg'\n                >\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M10 19l-7-7m0 0l7-7m-7 7h18'\n                  ></path>\n                </svg>\n                <span className='text-xs md:text-base'>Previous Day</span>\n              </button>\n            </div>\n            <div className='flex justify-end lg:pr-10'>\n              {isValidForNext && (\n                <button\n                  onClick={() => {\n                    nextHandler('next')\n                  }}\n                  className='rounded py-2 px-4 md:px-8 m-2 md:m-4 text-md text-primary bg-blue-800 hover:bg-white border-2 hover:border-blue-800 text-white hover:text-blue-800 transition ease-out duration-500'\n                >\n                  <span className='text-xs md:text-base'>Next Day</span>\n                  <svg\n                    className='inline-block w-6 h-6 ml-3'\n                    fill='none'\n                    stroke='currentColor'\n                    viewBox='0 0 24 24'\n                    xmlns='http://www.w3.org/2000/svg'\n                  >\n                    <path\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      strokeWidth='2'\n                      d='M14 5l7 7m0 0l-7 7m7-7H3'\n                    ></path>\n                  </svg>\n                </button>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","export const API_KEY = 'cAb9ydxREr7ycCodNgqi11IwbHZc6KlQ7l8aGOax'\n","import React from 'react'\n\nconst Header = () => {\n  return (\n    <>\n      <div className='bg-gray-300 px-2 py-4 sm:px-6 lg:px-8'>\n        <div className='grid grid-cols-1 md:grid-cols-2 lg:px-30 xl:px-60 font-body'>\n          <div className='flex justify-start lg:pl-5 items-center'>\n            <a\n              className='text-lg inline-block'\n              href='https://apod.nasa.gov/apod/astropix.html'\n            >\n              <img\n                className='inline-block h-20 w-auto p-2'\n                src='https://api.nasa.gov/assets/img/favicons/favicon-192.png'\n                alt='NASA'\n              />\n              <p className='text-md md:text-lg inline-block'>\n                Picture of the Day\n              </p>\n            </a>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './index.css'\nimport HomeScreen from './screens/HomeScreen'\nimport Header from './components/Header'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Route path='/' component={HomeScreen} exact />\n      </main>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}